{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-own-property-descriptors\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.promise\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport \"regenerator-runtime/runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { store } from './store';\nexport var GET_ALL_FILMS_FOR_RENDER = 'GET_ALL_FILMS_FOR_RENDER';\nexport var SELECTED_TAB_INDEX = 'SELECTED_TAB_INDEX';\nexport var UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM';\nexport var ADD_MOVIE = 'ADD_MOVIE';\nexport var UPDATE_MOVIE = 'UPDATE_MOVIE';\nexport var GET_MOVIE = 'GET_MOVIE';\nexport var getFilmsForRender = function getFilmsForRender(data, searchTerm, sortBy, filter, offset, shouldUpdateState) {\n  return {\n    type: GET_ALL_FILMS_FOR_RENDER,\n    data: data,\n    searchTerm: searchTerm,\n    sortBy: sortBy,\n    filter: filter,\n    offset: offset,\n    shouldUpdateState: shouldUpdateState\n  };\n};\nexport var getFilmById = function getFilmById(data) {\n  return {\n    type: GET_MOVIE,\n    data: data\n  };\n};\nexport var setSelectedIndex = function setSelectedIndex(data) {\n  return {\n    type: SELECTED_TAB_INDEX,\n    payload: data\n  };\n};\nexport var updateSearchTerm = function updateSearchTerm(data) {\n  return {\n    type: UPDATE_SEARCH_TERM,\n    payload: data\n  };\n};\nexport var pushMovieIntoList = function pushMovieIntoList(data) {\n  return {\n    type: ADD_MOVIE,\n    payload: data\n  };\n};\nexport var updateMovieInList = function updateMovieInList(data, id) {\n  return {\n    type: UPDATE_MOVIE,\n    payload: data,\n    id: id\n  };\n};\nexport var loadAllMovies = function loadAllMovies(title, sortBy, filter, offset, shouldUpdateState) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$fetch$then, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/movies?&limit=9&sortOrder=asc\".concat(offset ? \"&offset=\".concat(offset) : '&offset=0').concat(title ? \"&limit=3500&search=\".concat(title, \"&searchBy=title\") : '').concat(sortBy === 'title' ? '&sortBy=title' : sortBy === 'rating' ? '&sortBy=vote_average' : '&sortBy=release_date').concat(filter ? \"&filter=\".concat(filter) : '')).then(function (resp) {\n                return resp.json();\n              });\n\n            case 3:\n              _yield$fetch$then = _context.sent;\n              data = _yield$fetch$then.data;\n              store.dispatch(getFilmsForRender(data, title, sortBy, filter, offset, shouldUpdateState));\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getMovieById = function getMovieById(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"http://localhost:5000/movies/\".concat(id)).then(function (response) {\n                return response.json();\n              });\n\n            case 3:\n              data = _context2.sent;\n              store.dispatch(getFilmById(data));\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error();\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteMovie = function deleteMovie(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dispatch) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"http://localhost:5000/movies/\".concat(id), {\n                method: 'DELETE'\n              });\n\n            case 3:\n              store.dispatch(loadAllMovies('', '', ''));\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error();\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 6]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var addMovie = function addMovie(newMovie) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dispatch) {\n      var newMovieObject;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return fetch('http://localhost:5000/movies', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newMovie)\n              }).then(function (response) {\n                return response.json();\n              });\n\n            case 3:\n              newMovieObject = _context4.sent;\n              store.dispatch(pushMovieIntoList(newMovieObject));\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error();\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var updateMovie = function updateMovie(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(dispatch) {\n      var editedMovie;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return fetch('http://localhost:5000/movies/', {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n                  id: id\n                }))\n              }).then(function (response) {\n                return response.json();\n              });\n\n            case 3:\n              editedMovie = _context5.sent;\n              store.dispatch(updateMovieInList(editedMovie, editedMovie.id));\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error();\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Siarhei_Ivaneichyk/Desktop/reactMentoring/reactApplication/src/redux/actions.js"],"names":["store","GET_ALL_FILMS_FOR_RENDER","SELECTED_TAB_INDEX","UPDATE_SEARCH_TERM","ADD_MOVIE","UPDATE_MOVIE","GET_MOVIE","getFilmsForRender","data","searchTerm","sortBy","filter","offset","shouldUpdateState","type","getFilmById","setSelectedIndex","payload","updateSearchTerm","pushMovieIntoList","updateMovieInList","id","loadAllMovies","title","dispatch","fetch","then","resp","json","console","error","getMovieById","response","deleteMovie","method","addMovie","newMovie","headers","body","JSON","stringify","newMovieObject","updateMovie","editedMovie"],"mappings":"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","sourcesContent":["import { store } from './store';\r\n\r\nexport const GET_ALL_FILMS_FOR_RENDER = 'GET_ALL_FILMS_FOR_RENDER';\r\nexport const SELECTED_TAB_INDEX = 'SELECTED_TAB_INDEX';\r\nexport const UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM';\r\nexport const ADD_MOVIE = 'ADD_MOVIE';\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE';\r\nexport const GET_MOVIE = 'GET_MOVIE';\r\n\r\nexport const getFilmsForRender = (data, searchTerm, sortBy, filter, offset, shouldUpdateState) => ({\r\n  type: GET_ALL_FILMS_FOR_RENDER,\r\n  data,\r\n  searchTerm,\r\n  sortBy,\r\n  filter,\r\n  offset,\r\n  shouldUpdateState,\r\n});\r\n\r\nexport const getFilmById = (data) => ({\r\n  type: GET_MOVIE,\r\n  data,\r\n});\r\n\r\nexport const setSelectedIndex = (data) => ({\r\n  type: SELECTED_TAB_INDEX,\r\n  payload: data,\r\n});\r\n\r\nexport const updateSearchTerm = (data) => ({\r\n  type: UPDATE_SEARCH_TERM,\r\n  payload: data,\r\n});\r\n\r\nexport const pushMovieIntoList = (data) => ({\r\n  type: ADD_MOVIE,\r\n  payload: data,\r\n});\r\n\r\nexport const updateMovieInList = (data, id) => ({\r\n  type: UPDATE_MOVIE,\r\n  payload: data,\r\n  id,\r\n});\r\n\r\nexport const loadAllMovies = (title, sortBy, filter, offset, shouldUpdateState) => async (dispatch) => {\r\n  try {\r\n    const { data } = await fetch(`http://localhost:5000/movies?&limit=9&sortOrder=asc${offset ? `&offset=${offset}` : '&offset=0'}${title ? `&limit=3500&search=${title}&searchBy=title` : ''}${sortBy === 'title' ? '&sortBy=title' : sortBy === 'rating' ? '&sortBy=vote_average' : '&sortBy=release_date'}${filter ? `&filter=${filter}` : ''}`)\r\n      .then((resp) => resp.json());\r\n    store.dispatch(getFilmsForRender(data, title, sortBy, filter, offset, shouldUpdateState));\r\n  } catch (error) {\r\n    console.error();\r\n  }\r\n};\r\n\r\nexport const getMovieById = (id) => async (dispatch) => {\r\n  try {\r\n    const data = await fetch(`http://localhost:5000/movies/${id}`).then((response) => response.json());\r\n    store.dispatch(getFilmById(data));\r\n  } catch (error) {\r\n    console.error();\r\n  }\r\n};\r\n\r\nexport const deleteMovie = (id) => async (dispatch) => {\r\n  try {\r\n    await fetch(`http://localhost:5000/movies/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    store.dispatch(loadAllMovies('', '', ''));\r\n  } catch (error) {\r\n    console.error();\r\n  }\r\n};\r\n\r\nexport const addMovie = (newMovie) => async (dispatch) => {\r\n  try {\r\n    const newMovieObject = await fetch('http://localhost:5000/movies', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newMovie),\r\n    }).then((response) => response.json());\r\n    store.dispatch(pushMovieIntoList(newMovieObject));\r\n  } catch (error) {\r\n    console.error();\r\n  }\r\n};\r\n\r\nexport const updateMovie = (data, id) => async (dispatch) => {\r\n  try {\r\n    const editedMovie = await fetch('http://localhost:5000/movies/', {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...data, id }),\r\n    }).then((response) => response.json());\r\n    store.dispatch(updateMovieInList(editedMovie, editedMovie.id));\r\n  } catch (error) {\r\n    console.error();\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}