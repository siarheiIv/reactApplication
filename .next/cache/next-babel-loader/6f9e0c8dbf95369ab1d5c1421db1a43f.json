{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nvar _s3 = $RefreshSig$();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { Fragment, useState } from 'react';\nimport EditMovieMenu from '../editMovieMenu/index';\n\nvar EditMovie = function EditMovie(props) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  var useToggle = function useToggle(initialState) {\n    _s2();\n\n    var _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n    var toggle = function toggle() {\n      setValue(!value);\n    };\n\n    return [value, toggle];\n  };\n\n  _s2(useToggle, \"jt4mm5R6KAcwtZGUH9LBcc0JQ38=\");\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isModalOpen = _useToggle2[0],\n      setIsModalOpen = _useToggle2[1];\n\n  var description = props.description;\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_edit\",\n    onClick: setIsModalOpen\n  }, /*#__PURE__*/React.createElement(\"span\", null)), isModalOpen && /*#__PURE__*/React.createElement(EditMovieMenu, {\n    handleClick: setIsModalOpen,\n    description: description\n  }));\n};\n\n_s3(EditMovie, \"mfu7HHEekFhbmJbceiQTvSwpYHw=\", true);\n\n_c = EditMovie;\nexport default EditMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"sources":["C:/Users/Siarhei_Ivaneichyk/Desktop/reactMentoring/reactApplication/src/components/movieList/editMovie/editMovie.jsx"],"names":["React","Fragment","useState","EditMovieMenu","EditMovie","props","useToggle","initialState","value","setValue","toggle","isModalOpen","setIsModalOpen","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAAA;;AAC3B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAkB;AAAA;;AAAA,oBACRL,QAAQ,CAACK,YAAD,CADA;AAAA;AAAA,QAC3BC,KAD2B;AAAA,QACpBC,QADoB;;AAElC,QAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBD,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,KAFD;;AAGA,WAAO,CAACA,KAAD,EAAQE,MAAR,CAAP;AACD,GAND;;AAD2B,MACrBJ,SADqB;;AAAA,mBASWA,SAAS,CAAC,KAAD,CATpB;AAAA;AAAA,MASpBK,WAToB;AAAA,MASPC,cATO;;AAAA,MAWnBC,WAXmB,GAWHR,KAXG,CAWnBQ,WAXmB;AAY3B,sBACM,oBAAC,QAAD,qBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAED;AAArC,kBACI,iCADJ,CADJ,EAIKD,WAAW,iBACT,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAEC,cAA5B;AAA4C,IAAA,WAAW,EAAEC;AAAzD,IALP,CADN;AASD,CArBD;;IAAMT,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport EditMovieMenu from '../editMovieMenu/index';\r\n\r\nconst EditMovie = (props) => {\r\n  const useToggle = (initialState) => {\r\n    const [value, setValue] = useState(initialState);\r\n    const toggle = () => {\r\n      setValue(!value);\r\n    };\r\n    return [value, toggle];\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useToggle(false);\r\n\r\n  const { description } = props;\r\n  return (\r\n        <Fragment>\r\n            <div className=\"movie_edit\" onClick={setIsModalOpen} >\r\n                <span></span>\r\n            </div>\r\n            {isModalOpen\r\n            && <EditMovieMenu handleClick={setIsModalOpen} description={description} />}\r\n        </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditMovie;\r\n"]},"metadata":{},"sourceType":"module"}