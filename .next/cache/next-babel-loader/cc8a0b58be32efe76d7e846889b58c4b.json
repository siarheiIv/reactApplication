{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loadAllMovies, setSelectedIndex } from '../../redux/actions';\nimport Tabs from './movieTabs/index';\nimport MovieFilter from '../movieFilter/index';\nimport Movie from './movie/index';\nimport movie_founded from './styles/movie_founded';\nimport movies_list from './movies_list';\n\nvar MovieList = function MovieList(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBottom = _useState2[0],\n      setIsBottom = _useState2[1];\n\n  var pathname = props.props.location.pathname;\n  console.log(props.movies);\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(function () {\n    var searchTerm = pathname.slice(15);\n    props.dispatch(loadAllMovies(searchTerm, props.sortBy, props.filter, 0, true));\n  }, [pathname]);\n  useEffect(function () {\n    if (isBottom) {\n      props.dispatch(loadAllMovies(props.searchTerm, props.sortBy, props.filter, props.offset + 9));\n    }\n\n    setIsBottom(false);\n  }, [isBottom]);\n\n  var handleScroll = function handleScroll() {\n    if (window.pageYOffset + window.innerHeight === document.documentElement.scrollHeight) {\n      setIsBottom(true);\n    }\n  };\n\n  var sortByTabClick = function sortByTabClick(e) {\n    if (e.target.dataset.tab === 'all') {\n      props.dispatch(loadAllMovies(props.searchTerm, props.sortBy, '', 0, true));\n    } else {\n      props.dispatch(loadAllMovies(props.searchTerm, props.sortBy, e.target.dataset.tab, 0, true));\n    }\n  };\n\n  var handleChange = function handleChange(e) {\n    if (e && e.target.options[e.target.selectedIndex].value === 'title') {\n      props.dispatch(loadAllMovies(props.searchTerm, 'title', props.filter, 0, true));\n    } else if (e && e.target.options[e.target.selectedIndex].value === 'date') {\n      props.dispatch(loadAllMovies(props.searchTerm, 'date', props.filter, 0, true));\n    } else {\n      props.dispatch(loadAllMovies(props.searchTerm, 'rating', props.filter, 0, true));\n    }\n  };\n\n  var handleTabClick = function handleTabClick(e, index) {\n    props.dispatch(setSelectedIndex(index));\n    sortByTabClick(e);\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sort-line\"\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    handleTabClick: handleTabClick,\n    selectedTabIndex: props.selectedTabIndex\n  }), /*#__PURE__*/React.createElement(MovieFilter, {\n    handleChange: handleChange\n  })), Boolean(props.movies.length) && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sort-line__movies-num\"\n  }, \"\".concat(props.movies && props.movies.length, \" movies found\")), Boolean(!props.movies.length) && /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '100px'\n    }\n  }, \"Movies not found\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movies-list\"\n  }, Boolean(props.movies.length) && props.movies.map(function (movie) {\n    return /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      description: movie\n    });\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    movies: store.homePage.movies,\n    sortBy: store.homePage.sortBy,\n    selectedTabIndex: store.homePage.selectedTabIndex,\n    searchTerm: store.homePage.searchTerm,\n    filter: store.homePage.filter,\n    offset: store.homePage.offset\n  };\n};\n\nexport default connect(mapStateToProps)(MovieList);","map":null,"metadata":{},"sourceType":"module"}